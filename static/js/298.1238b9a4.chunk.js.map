{"version":3,"file":"static/js/298.1238b9a4.chunk.js","mappings":"2IACA,QAAmC,sCAAnC,EAAwF,kCAAxF,EAAoI,6B,iCCI7H,MAAMA,EAA0BC,IACnC,IAAKC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASH,EAAMI,SAEzCE,EAAAA,EAAAA,YAAU,KACND,EAAUL,EAAMI,OAAO,GACxB,CAACJ,EAAMI,SAeV,OACIG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACMP,IACEM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WAAU,MAAEC,EAAAA,EAAAA,KAAA,QAAMC,cAjBZC,KACrBX,EAAMY,SAAWV,GAAY,EAAK,EAgB+BM,SAAER,EAAMI,QAAU,aAG9EH,IACGQ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SAAOI,SAbCC,IACpBT,EAAUS,EAAEC,cAAcC,MAAM,EAYaC,WAAW,EAAMC,OAlBvCC,KACvBjB,GAAY,GACZF,EAAMoB,aAAahB,EAAO,EAgBgEY,MAAOZ,QAG3F,E,kCC/Bd,MAmCA,GAHiCiB,EAAAA,EAAAA,GAAU,CAAEC,KAAM,gBAAlBD,EAhCTE,IAAuC,IAAtC,aAAEC,EAAY,QAAEC,EAAO,MAAEC,GAAOH,EACvD,OAAOhB,EAAAA,EAAAA,MAAA,QAAMoB,SAAUH,EAAahB,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WACZkB,IAASjB,EAAAA,EAAAA,KAAA,OAAKmB,UAAWC,EAAAA,EAAMC,iBAAiBtB,SAC9CkB,KAEHnB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,KACfuB,EAAAA,EAAAA,GAAY,YAAa,WAAY,QAAS,KAAMC,EAAAA,OAEvDzB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aAAY,KACduB,EAAAA,EAAAA,GAAY,WAAY,UAAW,QAAS,KAAMC,EAAAA,OAErDzB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAAqB,KACvBuB,EAAAA,EAAAA,GAAY,KAAM,iBAAkB,QAAS,KAAMC,EAAAA,EAAa,CAAEC,KAAM,iBAE3E1B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BAA0B,KAC5BuB,EAAAA,EAAAA,GAAY,yBAA0B,4BAA6B,WAAY,KAAMC,EAAAA,OAExFzB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aAAY,KAAG0B,OAAOC,KAAKV,EAAQW,UAAUC,KAAIC,IAC3C7B,EAAAA,EAAAA,KAAA,OAAemB,UAAWW,EAAe/B,UAC9CD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAI8B,EAAI,MAAGP,EAAAA,EAAAA,GAAYO,EAAK,YAAcA,EAAK,QAAS,KAAMN,EAAAA,OAD/CM,UAKhB,ICaHE,EAAcC,IAAuC,IAAtC,QAAChB,EAAO,QAAEb,EAAO,aAAE8B,GAAaD,EACnD,OAAOlC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACJI,IAAWH,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,UAAQkC,QAASD,EAAalC,SAAC,YAChDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,KAAGiB,EAAQmB,aAE7BrC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aAAY,KAAGiB,EAAQoB,YAE5BtC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAAqB,KAAGiB,EAAQqB,eAAiB,MAAQ,QAE7DrB,EAAQqB,iBACPvC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BAA0B,KAAGiB,EAAQsB,8BAG5CxC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aAAY,KAAG0B,OAAOC,KAAKV,EAAQW,UAAUC,KAAIC,IAC3C7B,EAAAA,EAAAA,KAACuC,EAAO,CAAWC,aAAcX,EAAKY,aAAczB,EAAQW,SAASE,IAAvDA,UAGrB,EAGFU,EAAUG,IAAmC,IAAlC,aAACF,EAAY,aAAEC,GAAaC,EAC3C,OAAO5C,EAAAA,EAAAA,MAAA,OAAKqB,UAAWW,EAAe/B,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAIyC,IAAiB,KAAGC,IAAmB,EAIpF,EAvEoB3B,IAAyE,IAAxE,QAAEX,EAAO,QAAEa,EAAO,OAAErB,EAAM,aAAEgB,EAAY,UAAEgC,EAAS,YAAEC,GAAa9B,GAEhFtB,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAEvC,IAAKsB,EACH,OAAOhB,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,IAiBnB,OACE/C,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAK8C,IAAI,oHAAoHC,IAAI,kBAAkBC,OAAQ,IAAKC,MAAO,OACvKnD,EAAAA,EAAAA,MAAA,OAAKqB,UAAWW,EAAwB/B,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAK8C,IAA6B,MAAxB9B,EAAQkC,OAAOC,MAAgBnC,EAAQkC,OAAOC,MAAQC,EAAcjC,UAAWW,KACzF9B,EAAAA,EAAAA,KAAA,OAAAD,SACGI,IAAWH,EAAAA,EAAAA,KAAA,SAAOwB,KAAK,OAAOpB,SApBVC,IACvBA,EAAEgD,OAAOC,MAAMC,QACjBZ,EAAUtC,EAAEgD,OAAOC,MAAM,GAC3B,MAmBK9D,GACCQ,EAAAA,EAAAA,KAACwD,EAAwB,CAACC,cAAezC,EAASA,QAASA,EAASE,SAjB1DwC,IAChBd,EAAYc,GAAUC,MACpB,KACElE,GAAY,EAAM,GAErB,KAaKO,EAAAA,EAAAA,KAAC+B,EAAW,CAACE,aAAcA,KAAOxC,GAAY,EAAK,EAAGuB,QAASA,EAASb,QAASA,KACnFH,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACV,EAAsB,CAACa,QAASA,EAASR,OAAQA,EAAQgB,aAAcA,WAGxE,E,cC5CV,QAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mBCgBvB,EAdcpB,IAEVS,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAA,OAAKqB,UAAWW,EAAY/B,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAK8C,IAAI,8EACRvD,EAAMqE,SACP9D,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,SAAW,IAAER,EAAMsE,sB,wBCJnC,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAexBC,GAAsBpD,EAAAA,EAAAA,GAAU,CAAEC,KAAM,sBAAlBD,EAbXrB,IAEpBO,EAAAA,EAAAA,MAAA,QAAMoB,SAAU3B,EAAMwB,aAAahB,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACiE,EAAAA,EAAK,CAACC,YAAa,kBAAmBC,KAAM,cAAeC,UAAW7C,EAAAA,EAAa8C,MAAO,WAAYC,SAAU,CAACC,EAAAA,EAAUT,QAE9H9D,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBCchB,EAvBgByE,EAAAA,MAAYjF,IAG1B,IAIIkF,EAAe,IAAIlF,EAAMmF,OAAOC,UAAU/C,KAAIgD,IAAK5E,EAAAA,EAAAA,KAAC6E,EAAI,CAAYjB,QAASgB,EAAEhB,QAASC,cAAee,EAAEE,YAA3CF,EAAEG,MAEpE,OACEjF,EAAAA,EAAAA,MAAA,OAAKqB,UAAWW,EAAkB/B,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACgE,EAAmB,CAAC9C,SAVV8D,IACfzF,EAAM0F,QAAQD,EAAOE,YAAY,OAW/BlF,EAAAA,EAAAA,KAAA,OAAKmB,UAAWW,EAAa/B,SAC1B0E,MAEC,I,cCJV,MAEA,GAFyBU,EAAAA,EAAAA,KAfFC,IACd,CACLV,MAAOU,EAAMC,YAAYX,MACzBQ,YAAaE,EAAMC,YAAYH,gBAITI,IACjB,CACLL,QAAUC,IACRI,EAASC,EAAAA,GAAQC,qBAAqBN,GAAa,KAKhCC,CAA6CM,GCPtE,EATiBlG,IAEbO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC0F,EAAW,CAACvF,QAASZ,EAAMY,QAASa,QAASzB,EAAMyB,QAASrB,OAAQJ,EAAMI,OAAQgB,aAAcpB,EAAMoB,aAAcgC,UAAWpD,EAAMoD,UAAWC,YAAarD,EAAMqD,eACpK5C,EAAAA,EAAAA,KAAC2F,EAAgB,O,2CCqCvB,SAAeC,EAAAA,EAAAA,IAASC,EAAAA,EAAYC,EAAAA,GAAkBX,EAAAA,EAAAA,KAV/BC,IACd,CACLpE,QAASoE,EAAMC,YAAYrE,QAC3B+E,WAAYX,EAAMC,YAAYU,WAC9BpG,OAAQyF,EAAMC,YAAY1F,OAC1BqG,iBAAkBZ,EAAMa,KAAKC,OAC7BC,OAAQf,EAAMa,KAAKE,UAIwD,CAACC,eAAc,KAAEC,UAAS,KAAE1F,aAAY,KAAEgC,UAAS,KAAEC,YAAW,OAA/I,EAlC0BrD,IAExB,IAAI,OAAE2G,IAAWI,EAAAA,EAAAA,KAejB,OAbIJ,IACFA,EAAS3G,EAAMyG,mBAGjBnG,EAAAA,EAAAA,YAAU,KAAON,EAAM6G,eAAeF,EAAO,GAAG,CAACA,KACjDrG,EAAAA,EAAAA,YAAU,KAAON,EAAM8G,UAAUH,EAAO,GAAG,CAACA,KAS1ClG,EAAAA,EAAAA,KAAAuG,EAAAA,SAAA,CAAAxG,SACCR,EAAMwG,YAAa/F,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,KAAM7C,EAAAA,EAAAA,KAACwG,EAAO,CAACrG,UAAW+F,GAAU3G,EAAMyG,kBAAmBhF,QAASzB,EAAMyB,QAASrB,OAAQJ,EAAMI,OAAQgB,aAAcpB,EAAMoB,aAAcgC,UAAWpD,EAAMoD,UAAWC,YAAarD,EAAMqD,eACvN,G,mFChBA,MAAMrB,EAAkET,IAAoC,IAAnC,MAAE2F,EAAK,KAAEC,KAASC,GAAW7F,EACzG,MAAM8F,EAAWF,EAAKG,SAAWH,EAAKzF,MACtC,OACInB,EAAAA,EAAAA,MAAA,OAAKqB,UAAS,GAAA2F,OAAK1F,EAAAA,EAAM2F,YAAW,KAAAD,OAAIF,GAAYxF,EAAAA,EAAMH,OAAQlB,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC2G,EAAUtC,MAAK,IAAKsC,KAAeF,KAAWC,MAElDE,IAAY5G,EAAAA,EAAAA,KAAA,QAAAD,SAAO2G,EAAKzF,UACvB,EAIP,SAASK,EAA0C6C,EAAoBE,EAAwCD,EAA+DF,EAAgC8C,EAAsCxF,EAAeyF,EAAe1G,GAA2B,IAAXhB,EAAK2H,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAAC,CAAC,EAC5S,OACApH,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACKkH,GAAKjH,EAAAA,EAAAA,KAACiE,EAAAA,EAAK,CAACE,KAAMA,EAAME,MAAOA,EAAOD,UAAWA,EAAWF,YAAaA,EAAaI,SAAU0C,EAAYxF,KAAMA,EAAMjB,MAAOA,KAAWhB,MAEnJ,C,0CC9BO,MAAMgF,EAA+BhE,IACxC,IAAKA,EAAO,MAAO,mBACH,EAGPwD,EAAoBqD,GAAyC7G,IACtE,GAAIA,EAAMgD,OAAS6D,EAAU,MAAM,iBAANN,OAAwBM,EAAQ,WAC7C,C,2ECJpB,IAAIC,EAA8BjC,IAAmB,CACjDe,OAAQf,EAAMa,KAAKE,SAGhB,SAASL,EAA2CwB,GAevD,OAAOnC,EAAAA,EAAAA,IAA6CkC,EAA7ClC,EAd8D5F,IACjE,IAAI,OAAC4G,EAAM,OAAEoB,KAAWZ,GAAapH,EACrC,OAAIA,EAAM4G,QACCnG,EAAAA,EAAAA,KAACsH,EAAgB,IAAKX,KACrBpH,EAAM4G,QAAW5G,EAAMgI,UAG1BhI,EAAM4G,QAAW5G,EAAMgI,OAAOC,OAAOtB,SAGjC3G,EAAM4G,QAAU5G,EAAMgI,OAAOC,OAAOtB,QAAelG,EAAAA,EAAAA,KAACsH,EAAgB,IAAKX,SAA9E,GALG3G,EAAAA,EAAAA,KAACyH,EAAAA,GAAQ,CAACC,GAAG,UAOxB,GAGR,C,kCCxBA,SAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wC","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.tsx","components/utils/validators/validators.ts","hoc/withAuthRedirect.tsx","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__k4HM9\",\"profilePhoto\":\"ProfileInfo_profilePhoto__0KZnC\",\"contact\":\"ProfileInfo_contact__M28g1\"};","import React from \"react\";\r\nimport styles from \"./ProfileStatus.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner && setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport styles from \"../ProfileInfo.module.css\";\r\nimport style from \"../../../../components/common/FormsControls/FormsControls.module.css\";\r\nimport { createField, FormControl } from \"../../../common/FormsControls/FormsControls.tsx\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return <form onSubmit={handleSubmit}>\r\n    <div><button>Save</button></div>\r\n    {error && <div className={style.formSummaryError}>\r\n      {error}\r\n    </div>}\r\n    <div>\r\n      <b>Full name</b>:\r\n      {createField(\"Full name\", \"fullName\", \"input\", null, FormControl)}\r\n    </div>\r\n    <div>\r\n      <b>About me</b>:\r\n      {createField(\"About me\", \"aboutMe\", \"input\", null, FormControl)}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>:\r\n      {createField(null, \"lookingForAJob\", \"input\", null, FormControl, { type: \"checkbox\" })}\r\n    </div>\r\n    <div>\r\n      <b>My professional skills</b>:\r\n      {createField(\"My professional skills\", \"lookingForAJobDescription\", \"textarea\", null, FormControl)}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={styles.contact}>\r\n          <b>{key}: {createField(key, \"contacts.\" + key, \"input\", null, FormControl)}</b>\r\n        </div>\r\n      })}\r\n    </div>\r\n  </form>\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport profilePhoto from \"../../../assets/images/user.png\"\r\nimport { ProfileStatusWithHooks } from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({ isOwner, profile, status, updateStatus, savePhoto, saveProfile }) => {\r\n  \r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  };\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false)\r\n      }\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img src=\"https://bogatyr.club/uploads/posts/2023-01/thumbs/1674852902_bogatyr-club-p-zvezdnoe-nebo-fon-fon-vkontakte-2.jpg\" alt=\"content_picture\" height={360} width={984}/>\r\n      <div className={styles.descriptionBlock}>\r\n        <img src={profile.photos.large != null ? profile.photos.large : profilePhoto} className={styles.profilePhoto} />\r\n        <div>\r\n          {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        </div>\r\n        {editMode \r\n        ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> \r\n        : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n        <div>\r\n          <ProfileStatusWithHooks isOwner={isOwner} status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n    <div>\r\n      <b>Full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n      })}\r\n    </div>\r\n  </div>\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={styles.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n};\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Ce03M\",\"posts\":\"MyPosts_posts__E0dhm\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Vjz2+\"};","import React from \"react\";\r\nimport styles from \"../Post/Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={styles.item}>\r\n        <img src=\"https://cs10.pikabu.ru/post_img/big/2019/11/11/10/1573494458145017681.png\" />\r\n        {props.message}\r\n        <div>\r\n          <span>like</span> {props.likes_counter}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators.ts\";\r\nimport { FormControl } from \"../../../common/FormsControls/FormsControls.tsx\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder={\"Enter post text\"} name={\"newPostText\"} component={FormControl} child={\"textarea\"} validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const AddNewPostReduxForm = reduxForm({ form: \"profileAddPostForm\" })(AddNewPostForm);","import React from \"react\";\r\nimport styles from \"../MyPosts/MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { AddNewPostReduxForm } from \"./AddPostForm/AddPostForm\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  // console.log(\"RENDERED\")\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  let postsElement = [...props.posts].reverse().map(p => <Post key={p.id} message={p.message} likes_counter={p.likesCount} />)\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={styles.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { actions } from \"../../../redux/profile-reducer.ts\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(actions.addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;","import React, { useEffect } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer.ts\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect.tsx\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"../../hoc/withRouter.tsx\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n  let { userId } = useParams();\r\n  \r\n  if(!userId) {\r\n    userId = props.authorizedUserId\r\n  }\r\n\r\n  useEffect(() => {props.getUserProfile(userId)}, [userId],);\r\n  useEffect(() => {props.getStatus(userId)}, [userId],);\r\n\r\n  // const catchAllUnhandleErrors = (reason, promise) => {\r\n  //   alert(\"Some error occured\")\r\n  // }\r\n\r\n  // window.addEventListener(\"unhandledrejection\", catchAllUnhandleErrors);\r\n\r\n  return (\r\n    <>\r\n    {props.isFetching ? <Preloader /> : <Profile isOwner={!(userId != props.authorizedUserId)} profile={props.profile} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>}\r\n    </>\r\n  )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    isFetching: state.profilePage.isFetching,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n};\r\n\r\nexport default compose (withRouter, withAuthRedirect, connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}))(ProfileContainer);","import React from \"react\";\r\nimport style from \"./FormsControls.module.css\"\r\nimport { Field, WrappedFieldProps } from \"redux-form\";\r\nimport { FieldValiatorType } from \"../../utils/validators/validators.ts\";\r\n\r\ntype FormControlPropsType = {\r\n    name: string\r\n    child: \"input\" | \"textarea\" | \"select\"\r\n    placeholder: string | undefined\r\n    validators: Array<FieldValiatorType>\r\n    type?: string\r\n    text?: string\r\n    value?: string\r\n}\r\n\r\nexport const FormControl: React.FC<FormControlPropsType & WrappedFieldProps> = ({ input, meta, ...restProps }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${style.formControl} ${hasError && style.error}`}>\r\n            <div>\r\n                <restProps.child {...restProps} {...input} {...meta} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function createField<FormKeysType extends string> (name: FormKeysType, child: \"input\" | \"textarea\" | \"select\", component: React.FC<FormControlPropsType & WrappedFieldProps>, placeholder: string| undefined, validators: Array<FieldValiatorType>, type?: string, text?: string, value?: string, props={}) {\r\n    return (\r\n    <div>\r\n        {text}<Field name={name} child={child} component={component} placeholder={placeholder} validate={validators} type={type} value={value} {...props}/>\r\n    </div>)\r\n}","export type FieldValiatorType = (value: string) => string | undefined;\r\n\r\nexport const required: FieldValiatorType = (value) => {\r\n    if (!value) return \"Field is required\";\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxValue: number): FieldValiatorType => (value) => {\r\n    if (value.length > maxValue) return `Max length is ${maxValue} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType): MapPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport function withAuthRedirect<WCP extends MapPropsType>(WrappedComponent: React.ComponentType<WCP>) {\r\n    const RedirectComponent: React.FC<MapPropsType & RouterPropsType> = (props) => {\r\n        let {isAuth, router, ...restProps} = props\r\n        if (props.isAuth) {\r\n            return <WrappedComponent {...restProps as WCP} />\r\n        } else if (!props.isAuth && !props.router) {\r\n            return <Navigate to='/login' />\r\n        } else {\r\n            if (!props.isAuth && !props.router.params.userId) {\r\n                return <Navigate to='/login' />\r\n            } else {\r\n                if (!props.isAuth && props.router.params.userId) return <WrappedComponent {...restProps as WCP} />\r\n            }\r\n        }\r\n    }\r\n    return connect<MapPropsType, {}, WCP, AppStateType>(mapStateToPropsForRedirect)((RedirectComponent));\r\n};\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean\r\n};\r\n\r\ntype RouterPropsType = {\r\n    router: {\r\n        params: {\r\n            userId: number\r\n        }\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__EUGJ+\",\"error\":\"FormsControls_error__srujM\",\"formSummaryError\":\"FormsControls_formSummaryError__AKM+F\"};"],"names":["ProfileStatusWithHooks","props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","isOwner","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","FormControl","type","Object","keys","contacts","map","key","styles","ProfileData","_ref2","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","_ref3","savePhoto","saveProfile","Preloader","src","alt","height","width","photos","large","profilePhoto","target","files","length","ProfileDataFormReduxForm","initialValues","formData","then","message","likes_counter","maxLength10","maxLengthCreator","AddNewPostReduxForm","Field","placeholder","name","component","child","validate","required","React","postsElement","posts","reverse","p","Post","likesCount","id","values","addPost","newPostText","connect","state","profilePage","dispatch","actions","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","compose","withRouter","withAuthRedirect","isFetching","authorizedUserId","auth","userId","isAuth","getUserProfile","getStatus","useParams","_Fragment","Profile","input","meta","restProps","hasError","touched","concat","formControl","validators","text","arguments","undefined","maxValue","mapStateToPropsForRedirect","WrappedComponent","router","params","Navigate","to"],"sourceRoot":""}