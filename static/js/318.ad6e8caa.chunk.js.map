{"version":3,"file":"static/js/318.ad6e8caa.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","components/utils/validators/validators.js","hoc/withAuthRedirect.jsx","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__k4HM9\",\"profilePhoto\":\"ProfileInfo_profilePhoto__0KZnC\"};","import React from \"react\";\r\nimport styles from \"./ProfileStatus.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport profilePhoto from \"../../../assets/images/user.png\"\r\nimport { ProfileStatusWithHooks } from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <img src=\"https://bogatyr.club/uploads/posts/2023-01/thumbs/1674852902_bogatyr-club-p-zvezdnoe-nebo-fon-fon-vkontakte-2.jpg\" alt=\"content_picture\" height={360} width={985} />\r\n      <div className={styles.descriptionBlock}>\r\n        <img src={profile.photos.large != null ? profile.photos.large : profilePhoto} className={styles.profilePhoto} />\r\n        <div>\r\n          {profile.fullName}\r\n        </div>\r\n        <div>\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {profile.aboutMe}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Ce03M\",\"posts\":\"MyPosts_posts__E0dhm\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Vjz2+\"};","import React from \"react\";\r\nimport styles from \"../Post/Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={styles.item}>\r\n        <img src=\"https://cs10.pikabu.ru/post_img/big/2019/11/11/10/1573494458145017681.png\" />\r\n        {props.message}\r\n        <div>\r\n          <span>like</span> {props.likes_counter}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { FormControl } from \"../../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder={\"Enter post text\"} name={\"newPostText\"} component={FormControl} child={\"textarea\"} validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const AddNewPostReduxForm = reduxForm({ form: \"profileAddPostForm\" })(AddNewPostForm);","import React from \"react\";\r\nimport styles from \"../MyPosts/MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { AddNewPostReduxForm } from \"./AddPostForm/AddPostForm\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  // console.log(\"RENDERED\")\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  let postsElement = [...props.posts].reverse().map(p => <Post message={p.message} likes_counter={p.likesCount} />)\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      </div>\r\n      <div className={styles.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;","import React, { useEffect } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"../../hoc/withRouter\";\r\n\r\n\r\nfunction ProfileContainer(props) {\r\n\r\n  let { userId } = useParams();\r\n  \r\n  if(!userId) {\r\n    userId = props.authorizedUserId\r\n  }\r\n\r\n  useEffect(() => {props.getUserProfile(userId)}, [userId],);\r\n  useEffect(() => {props.getStatus(userId)}, [userId],);\r\n\r\n  return (\r\n    <>\r\n    {props.isFetching ? <Preloader /> : <Profile profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>}\r\n    </>\r\n  )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    isFetching: state.profilePage.isFetching,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n};\r\n\r\nexport default compose (withRouter, withAuthRedirect, connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }))(ProfileContainer);","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport { Field } from \"redux-form\";\r\n\r\n\r\nexport const FormControl = ({ input, meta, ...restProps }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError && styles.error}`}>\r\n            <div>\r\n                <restProps.child {...restProps} {...input} {...meta} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, child, validators, component, props={}, text = \"\") => {\r\n    return (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} child={child} validate={validators} component={component} {...props}/>{text}\r\n    </div>)\r\n}","export const required = value => {\r\n    if (!value) return \"Field is required\";\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxValue) => (value) => {\r\n    if (value.length > maxValue) return `Max length is ${maxValue} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth) {\r\n                return <Component {...this.props} />\r\n            } else if (!this.props.isAuth && !this.props.router) {\r\n                return <Navigate to='/login' />\r\n            } else {\r\n                if (!this.props.isAuth && !this.props.router.params.userId) {\r\n                    return <Navigate to='/login' />\r\n                } else {\r\n                    if (!this.props.isAuth && this.props.router.params.userId) return <Component {...this.props} />\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect, {})((RedirectComponent));\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__EUGJ+\",\"error\":\"FormsControls_error__srujM\",\"formSummaryError\":\"FormsControls_formSummaryError__AKM+F\"};"],"names":["ProfileStatusWithHooks","props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","_ref","profile","src","alt","height","width","className","styles","photos","large","profilePhoto","fullName","aboutMe","Preloader","message","likes_counter","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","FormControl","child","validate","required","React","postsElement","_toConsumableArray","posts","reverse","map","p","Post","likesCount","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","compose","withRouter","withAuthRedirect","isFetching","authorizedUserId","auth","userId","isAuth","getUserProfile","getStatus","useParams","_Fragment","Profile","input","meta","restProps","_objectWithoutProperties","_excluded","hasError","touched","error","concat","formControl","_objectSpread","createField","validators","arguments","length","undefined","text","maxValue","mapStateToPropsForRedirect","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","key","this","router","params","Navigate","to"],"sourceRoot":""}